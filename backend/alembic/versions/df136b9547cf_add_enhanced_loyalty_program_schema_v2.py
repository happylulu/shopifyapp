"""Add enhanced loyalty program schema v2

Revision ID: df136b9547cf
Revises: c0d3f083c04b
Create Date: 2025-05-26 11:36:08.535773

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'df136b9547cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('campaign_type', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('rules', sa.JSON(), nullable=True),
    sa.Column('bonus_points', sa.Integer(), nullable=True),
    sa.Column('bonus_multiplier', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('target_all_customers', sa.Boolean(), nullable=True),
    sa.Column('target_tier_ids', sa.JSON(), nullable=True),
    sa.Column('target_customer_ids', sa.JSON(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('budget_limit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('current_spend', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.CheckConstraint('budget_limit > 0', name='ck_budget_limit_positive'),
    sa.CheckConstraint('end_date > start_date', name='ck_campaign_dates_valid'),
    sa.CheckConstraint('max_participants > 0', name='ck_max_participants_positive'),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_campaign_dates', 'campaigns', ['start_date', 'end_date'], unique=False)
    op.create_index('ix_campaign_shop_status', 'campaigns', ['shop_id', 'status'], unique=False)
    op.create_table('customer_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('segment_type', sa.String(length=50), nullable=True),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.Column('customer_count', sa.Integer(), nullable=True),
    sa.Column('avg_lifetime_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('avg_points_balance', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('auto_update', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_computed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_id', 'name', name='uq_segment_name')
    )
    op.create_index('ix_segment_shop_active', 'customer_segments', ['shop_id', 'is_active'], unique=False)
    op.create_table('loyalty_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('total_customers', sa.Integer(), nullable=True),
    sa.Column('active_customers', sa.Integer(), nullable=True),
    sa.Column('new_customers', sa.Integer(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('points_redeemed', sa.Integer(), nullable=True),
    sa.Column('points_expired', sa.Integer(), nullable=True),
    sa.Column('total_revenue', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('loyalty_revenue', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('redemptions_count', sa.Integer(), nullable=True),
    sa.Column('referrals_count', sa.Integer(), nullable=True),
    sa.Column('campaign_participations', sa.Integer(), nullable=True),
    sa.Column('tier_distributions', sa.JSON(), nullable=True),
    sa.Column('tier_upgrades', sa.Integer(), nullable=True),
    sa.Column('tier_downgrades', sa.Integer(), nullable=True),
    sa.Column('computed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_id', 'date', 'period_type', name='uq_analytics_period')
    )
    op.create_index('ix_analytics_period', 'loyalty_analytics', ['period_type', 'date'], unique=False)
    op.create_index('ix_analytics_shop_date', 'loyalty_analytics', ['shop_id', 'date'], unique=False)
    op.create_table('reward_definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reward_type', sa.String(length=30), nullable=False),
    sa.Column('points_cost', sa.Integer(), nullable=False),
    sa.Column('reward_value', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('max_redemptions_per_customer', sa.Integer(), nullable=True),
    sa.Column('max_redemptions_total', sa.Integer(), nullable=True),
    sa.Column('current_redemptions', sa.Integer(), nullable=True),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('min_tier_level', sa.Integer(), nullable=True),
    sa.Column('allowed_tier_ids', sa.JSON(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('current_redemptions >= 0', name='ck_current_redemptions_positive'),
    sa.CheckConstraint('max_redemptions_per_customer > 0', name='ck_max_redemptions_customer_positive'),
    sa.CheckConstraint('max_redemptions_total > 0', name='ck_max_redemptions_total_positive'),
    sa.CheckConstraint('points_cost > 0', name='ck_points_cost_positive'),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reward_points_cost', 'reward_definitions', ['points_cost'], unique=False)
    op.create_index('ix_reward_shop_active', 'reward_definitions', ['shop_id', 'is_active'], unique=False)
    op.create_index('ix_reward_tier_level', 'reward_definitions', ['min_tier_level'], unique=False)
    op.create_table('tier_definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tier_level', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('tier_type', sa.String(length=20), nullable=True),
    sa.Column('min_points_required', sa.Integer(), nullable=True),
    sa.Column('min_spend_required', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('min_orders_required', sa.Integer(), nullable=True),
    sa.Column('qualification_period_days', sa.Integer(), nullable=True),
    sa.Column('points_multiplier', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('free_shipping', sa.Boolean(), nullable=True),
    sa.Column('early_access', sa.Boolean(), nullable=True),
    sa.Column('birthday_bonus_points', sa.Integer(), nullable=True),
    sa.Column('requires_maintenance', sa.Boolean(), nullable=True),
    sa.Column('maintenance_period_days', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('min_points_required >= 0', name='ck_min_points_positive'),
    sa.CheckConstraint('min_spend_required >= 0', name='ck_min_spend_positive'),
    sa.CheckConstraint('points_multiplier > 0', name='ck_points_multiplier_positive'),
    sa.CheckConstraint('tier_level > 0', name='ck_tier_level_positive'),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_id', 'name', name='uq_shop_tier_name'),
    sa.UniqueConstraint('shop_id', 'tier_level', name='uq_shop_tier_level')
    )
    op.create_index('ix_tier_level', 'tier_definitions', ['tier_level'], unique=False)
    op.create_table('customer_loyalty_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('shopify_customer_id', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('points_balance', sa.Integer(), nullable=True),
    sa.Column('lifetime_points_earned', sa.Integer(), nullable=True),
    sa.Column('lifetime_points_redeemed', sa.Integer(), nullable=True),
    sa.Column('lifetime_spent', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('lifetime_orders', sa.Integer(), nullable=True),
    sa.Column('current_tier_id', sa.Integer(), nullable=True),
    sa.Column('tier_achieved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tier_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_purchase_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_points_earned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_opt_in', sa.Boolean(), nullable=True),
    sa.Column('sms_opt_in', sa.Boolean(), nullable=True),
    sa.Column('birthday', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_vip', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('lifetime_points_earned >= 0', name='ck_lifetime_earned_positive'),
    sa.CheckConstraint('lifetime_spent >= 0', name='ck_lifetime_spent_positive'),
    sa.CheckConstraint('points_balance >= 0', name='ck_points_balance_positive'),
    sa.ForeignKeyConstraint(['current_tier_id'], ['tier_definitions.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_id', 'shopify_customer_id', name='uq_shop_customer')
    )
    op.create_index('ix_customer_email_shop', 'customer_loyalty_profiles', ['shop_id', 'email'], unique=False)
    op.create_index('ix_customer_points_balance', 'customer_loyalty_profiles', ['points_balance'], unique=False)
    op.create_index('ix_customer_tier', 'customer_loyalty_profiles', ['current_tier_id'], unique=False)
    op.create_table('campaign_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('orders_made', sa.Integer(), nullable=True),
    sa.Column('amount_spent', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('campaign_id', 'customer_id', name='uq_campaign_customer')
    )
    op.create_index('ix_participation_campaign', 'campaign_participations', ['campaign_id', 'joined_at'], unique=False)
    op.create_table('customer_segment_memberships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('removed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('qualification_reason', sa.String(length=200), nullable=True),
    sa.Column('qualification_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['segment_id'], ['customer_segments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('segment_id', 'customer_id', name='uq_segment_customer')
    )
    op.create_index('ix_membership_customer', 'customer_segment_memberships', ['customer_id', 'is_active'], unique=False)
    op.create_index('ix_membership_segment', 'customer_segment_memberships', ['segment_id', 'is_active'], unique=False)
    op.create_table('customer_tier_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('tier_id', sa.Integer(), nullable=False),
    sa.Column('achieved_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reason', sa.String(length=100), nullable=True),
    sa.Column('points_at_achievement', sa.Integer(), nullable=True),
    sa.Column('spend_at_achievement', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('orders_at_achievement', sa.Integer(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tier_id'], ['tier_definitions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_tier_history_current', 'customer_tier_history', ['customer_id', 'is_current'], unique=False)
    op.create_index('ix_tier_history_customer', 'customer_tier_history', ['customer_id', 'achieved_at'], unique=False)
    op.create_table('redemption_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=False),
    sa.Column('points_spent', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('discount_code', sa.String(length=50), nullable=True),
    sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('reward_data', sa.JSON(), nullable=True),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used_order_id', sa.String(length=100), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('redeemed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('points_spent > 0', name='ck_points_spent_positive'),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reward_id'], ['reward_definitions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_redemption_customer_date', 'redemption_logs', ['customer_id', 'redeemed_at'], unique=False)
    op.create_index('ix_redemption_discount_code', 'redemption_logs', ['discount_code'], unique=False)
    op.create_index('ix_redemption_expiration', 'redemption_logs', ['expires_at'], unique=False)
    op.create_index('ix_redemption_status', 'redemption_logs', ['status'], unique=False)
    op.create_table('point_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('points_amount', sa.Integer(), nullable=False),
    sa.Column('points_balance_after', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=20), nullable=False),
    sa.Column('source_id', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order_id', sa.String(length=100), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('redemption_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.CheckConstraint('points_amount != 0', name='ck_points_amount_not_zero'),
    sa.CheckConstraint('points_balance_after >= 0', name='ck_balance_after_positive'),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['redemption_id'], ['redemption_logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_points_customer_date', 'point_transactions', ['customer_id', 'created_at'], unique=False)
    op.create_index('ix_points_expiration', 'point_transactions', ['expires_at'], unique=False)
    op.create_index('ix_points_type_source', 'point_transactions', ['transaction_type', 'source'], unique=False)
    op.create_table('referral_clicks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referral_link_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('referrer_url', sa.String(length=500), nullable=True),
    sa.Column('utm_source', sa.String(length=100), nullable=True),
    sa.Column('utm_medium', sa.String(length=100), nullable=True),
    sa.Column('utm_campaign', sa.String(length=100), nullable=True),
    sa.Column('utm_content', sa.String(length=100), nullable=True),
    sa.Column('converted', sa.Boolean(), nullable=True),
    sa.Column('conversion_order_id', sa.String(length=100), nullable=True),
    sa.Column('conversion_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('clicked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('converted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['referral_link_id'], ['referral_links.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_click_conversion', 'referral_clicks', ['converted', 'converted_at'], unique=False)
    op.create_index('ix_click_ip', 'referral_clicks', ['ip_address'], unique=False)
    op.create_index('ix_click_referral_date', 'referral_clicks', ['referral_link_id', 'clicked_at'], unique=False)
    op.create_table('referral_conversions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referral_link_id', sa.Integer(), nullable=False),
    sa.Column('referred_customer_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=100), nullable=False),
    sa.Column('order_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('referrer_points_awarded', sa.Integer(), nullable=True),
    sa.Column('referee_points_awarded', sa.Integer(), nullable=True),
    sa.Column('referrer_discount_used', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('referee_discount_used', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('converted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('order_amount > 0', name='ck_order_amount_positive'),
    sa.ForeignKeyConstraint(['referral_link_id'], ['referral_links.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['referred_customer_id'], ['customer_loyalty_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_conversion_customer', 'referral_conversions', ['referred_customer_id'], unique=False)
    op.create_index('ix_conversion_order', 'referral_conversions', ['order_id'], unique=False)
    op.create_index('ix_conversion_referral', 'referral_conversions', ['referral_link_id', 'converted_at'], unique=False)
    op.drop_table('loyalty_points')
    op.drop_table('vip_members')
    op.drop_table('customers')
    op.add_column('referral_links', sa.Column('referral_code', sa.String(length=50), nullable=False))
    op.add_column('referral_links', sa.Column('referral_url', sa.String(length=500), nullable=False))
    op.add_column('referral_links', sa.Column('referrer_points', sa.Integer(), nullable=True))
    op.add_column('referral_links', sa.Column('referee_points', sa.Integer(), nullable=True))
    op.add_column('referral_links', sa.Column('referrer_discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('referral_links', sa.Column('referee_discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('referral_links', sa.Column('total_revenue', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('referral_links', sa.Column('total_points_awarded', sa.Integer(), nullable=True))
    op.add_column('referral_links', sa.Column('max_uses', sa.Integer(), nullable=True))
    op.add_column('referral_links', sa.Column('current_uses', sa.Integer(), nullable=True))
    op.add_column('referral_links', sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('referral_links', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('referral_links', sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True))
    # First, we need to handle the customer_id conversion carefully
    # Since we're changing the referral system completely, we'll drop existing data
    # and recreate the column with the new type
    op.execute("DELETE FROM referral_links")  # Clear existing data
    op.alter_column('referral_links', 'customer_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=False,
               postgresql_using='customer_id::integer')
    op.alter_column('referral_links', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index('ix_referral_active', 'referral_links', ['is_active'], unique=False)
    op.create_index('ix_referral_code', 'referral_links', ['referral_code'], unique=False)
    op.create_index('ix_referral_customer', 'referral_links', ['customer_id'], unique=False)
    op.create_unique_constraint(None, 'referral_links', ['referral_code'])
    op.drop_constraint('referral_links_shop_id_fkey', 'referral_links', type_='foreignkey')
    op.create_foreign_key(None, 'referral_links', 'customer_loyalty_profiles', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('referral_links', 'shop_id')
    op.drop_column('referral_links', 'revenue')
    op.drop_column('referral_links', 'archived')
    op.drop_column('referral_links', 'code')
    op.drop_column('referral_links', 'url')
    op.add_column('shops', sa.Column('loyalty_enabled', sa.Boolean(), nullable=True))
    op.add_column('shops', sa.Column('points_per_dollar', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('shops', sa.Column('welcome_points', sa.Integer(), nullable=True))
    op.add_column('shops', sa.Column('referral_points_referrer', sa.Integer(), nullable=True))
    op.add_column('shops', sa.Column('referral_points_referee', sa.Integer(), nullable=True))
    op.add_column('shops', sa.Column('points_expire_enabled', sa.Boolean(), nullable=True))
    op.add_column('shops', sa.Column('points_expire_days', sa.Integer(), nullable=True))
    op.add_column('shops', sa.Column('brand_color', sa.String(length=7), nullable=True))
    op.add_column('shops', sa.Column('loyalty_program_name', sa.String(length=100), nullable=True))
    op.add_column('shops', sa.Column('email_notifications_enabled', sa.Boolean(), nullable=True))
    op.add_column('shops', sa.Column('sms_notifications_enabled', sa.Boolean(), nullable=True))
    op.alter_column('shops', 'shop_domain',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('shops', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('shops', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('shops', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('shops', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('shops', 'shop_domain',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('shops', 'sms_notifications_enabled')
    op.drop_column('shops', 'email_notifications_enabled')
    op.drop_column('shops', 'loyalty_program_name')
    op.drop_column('shops', 'brand_color')
    op.drop_column('shops', 'points_expire_days')
    op.drop_column('shops', 'points_expire_enabled')
    op.drop_column('shops', 'referral_points_referee')
    op.drop_column('shops', 'referral_points_referrer')
    op.drop_column('shops', 'welcome_points')
    op.drop_column('shops', 'points_per_dollar')
    op.drop_column('shops', 'loyalty_enabled')
    op.add_column('referral_links', sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('referral_links', sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('referral_links', sa.Column('archived', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('referral_links', sa.Column('revenue', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('referral_links', sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'referral_links', type_='foreignkey')
    op.create_foreign_key('referral_links_shop_id_fkey', 'referral_links', 'shops', ['shop_id'], ['id'])
    op.drop_constraint(None, 'referral_links', type_='unique')
    op.drop_index('ix_referral_customer', table_name='referral_links')
    op.drop_index('ix_referral_code', table_name='referral_links')
    op.drop_index('ix_referral_active', table_name='referral_links')
    op.alter_column('referral_links', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('referral_links', 'customer_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('referral_links', 'last_used_at')
    op.drop_column('referral_links', 'updated_at')
    op.drop_column('referral_links', 'expires_at')
    op.drop_column('referral_links', 'current_uses')
    op.drop_column('referral_links', 'max_uses')
    op.drop_column('referral_links', 'total_points_awarded')
    op.drop_column('referral_links', 'total_revenue')
    op.drop_column('referral_links', 'referee_discount_percentage')
    op.drop_column('referral_links', 'referrer_discount_percentage')
    op.drop_column('referral_links', 'referee_points')
    op.drop_column('referral_links', 'referrer_points')
    op.drop_column('referral_links', 'referral_url')
    op.drop_column('referral_links', 'referral_code')
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], name='customers_shop_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customers_pkey')
    )
    op.create_table('vip_members',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('joined_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('archived', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], name='vip_members_shop_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vip_members_pkey')
    )
    op.create_table('loyalty_points',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], name='loyalty_points_shop_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='loyalty_points_pkey')
    )
    op.drop_index('ix_conversion_referral', table_name='referral_conversions')
    op.drop_index('ix_conversion_order', table_name='referral_conversions')
    op.drop_index('ix_conversion_customer', table_name='referral_conversions')
    op.drop_table('referral_conversions')
    op.drop_index('ix_click_referral_date', table_name='referral_clicks')
    op.drop_index('ix_click_ip', table_name='referral_clicks')
    op.drop_index('ix_click_conversion', table_name='referral_clicks')
    op.drop_table('referral_clicks')
    op.drop_index('ix_points_type_source', table_name='point_transactions')
    op.drop_index('ix_points_expiration', table_name='point_transactions')
    op.drop_index('ix_points_customer_date', table_name='point_transactions')
    op.drop_table('point_transactions')
    op.drop_index('ix_redemption_status', table_name='redemption_logs')
    op.drop_index('ix_redemption_expiration', table_name='redemption_logs')
    op.drop_index('ix_redemption_discount_code', table_name='redemption_logs')
    op.drop_index('ix_redemption_customer_date', table_name='redemption_logs')
    op.drop_table('redemption_logs')
    op.drop_index('ix_tier_history_customer', table_name='customer_tier_history')
    op.drop_index('ix_tier_history_current', table_name='customer_tier_history')
    op.drop_table('customer_tier_history')
    op.drop_index('ix_membership_segment', table_name='customer_segment_memberships')
    op.drop_index('ix_membership_customer', table_name='customer_segment_memberships')
    op.drop_table('customer_segment_memberships')
    op.drop_index('ix_participation_campaign', table_name='campaign_participations')
    op.drop_table('campaign_participations')
    op.drop_index('ix_customer_tier', table_name='customer_loyalty_profiles')
    op.drop_index('ix_customer_points_balance', table_name='customer_loyalty_profiles')
    op.drop_index('ix_customer_email_shop', table_name='customer_loyalty_profiles')
    op.drop_table('customer_loyalty_profiles')
    op.drop_index('ix_tier_level', table_name='tier_definitions')
    op.drop_table('tier_definitions')
    op.drop_index('ix_reward_tier_level', table_name='reward_definitions')
    op.drop_index('ix_reward_shop_active', table_name='reward_definitions')
    op.drop_index('ix_reward_points_cost', table_name='reward_definitions')
    op.drop_table('reward_definitions')
    op.drop_index('ix_analytics_shop_date', table_name='loyalty_analytics')
    op.drop_index('ix_analytics_period', table_name='loyalty_analytics')
    op.drop_table('loyalty_analytics')
    op.drop_index('ix_segment_shop_active', table_name='customer_segments')
    op.drop_table('customer_segments')
    op.drop_index('ix_campaign_shop_status', table_name='campaigns')
    op.drop_index('ix_campaign_dates', table_name='campaigns')
    op.drop_table('campaigns')
    # ### end Alembic commands ###
